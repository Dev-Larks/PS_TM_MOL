LAB A
Name: Get-ComputerInfo
Parameters: 	[string] $ComputerName
		[string] $ErrorLog = 'C:\Errors.txt'
		[switch] $LogErrors

$comp = get-ciminstance -ClassName Win32_ComputerSystem
$bios = get-ciminstance -ClassName Win32_BIOS
$os = get-ciminstance -ClassName Win32_OperatingSystem

Switch statement to display the returned AdminPasswordStatus
	switch ($comp.AdminPasswordStatus) {
		1 { $adminpw = 'Disabled' }
		2 { $adminpw = 'Enabled' }
		3 { $adminpw = 'NA' }
		default { $adminpw = 'Unknown' }

Create hashtable and place contents into a new PSObject in the
 same order as that of your custom view.

Function can get computers to query or have them piped in from another command


LAB B
Name: Get-FixedDiskInfo
Parameters: ComputerName, ErrorLog C:\Errors.txt, LogErrors [Switch]
CustomView - Computername, Drive, Freespace, Size

$disks = get-ciminstance -class Win32_Volume
Only fixed disks to be captured in $disks variable

Create hashtable and place contents into a new PSObject in the same order as the custom view.

Function can get computers to query or have them piped in from another command


LAB C
Get-ServiceInfo
Parameters: ComputerName, ErrorLog C:\Errors.txt, LogErrors [Switch]

$services = get-object -class win32_service -filter "State = 'Running'"
$process = get-wmiobject -class win32_process -filter "ProcessId = $($service.processid)"

Get services and add required values to hashtable
Match service and process Ids and write process info to hashtable 

Displays - Process name, virtual memory size
Optional values - Peak page file usage, thread count
CustomView - Computername, Displayname, ServiceName, ProcessName, ThreadCount, VMSize, PeakPageFile

Function can get computers to query or have them piped in from another command